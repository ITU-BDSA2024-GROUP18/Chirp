name: Build and Release Chirp

env:

  #Name of the csproj file, omit .csproj extension
  FILE_NAME: Chirp.Razor

  #The unique name of the webapp on the Azure Portal
  #This means our webapp address will be https://bdsagroup18chirprazor.azurewebsites.net/
  APP_NAME: bdsagroup18chirprazor 

  #Path to folder in which dotnet stores config files upon 
  #running dotnet publish, which are then deployed to Azure
  FILE_PATH: "./Chirp.Razor-v0.3.0-/"

#Do this workflow when any version tag is pushed
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux-x64, osx-x64, win-x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Clear NuGet Cache
        run: dotnet nuget locals all --clear

      - name: Install dependencies for ${{ env.FILE_NAME }}
        working-directory: src/${{ env.FILE_NAME }}
        run: dotnet restore

      - name: Build {{ env.FILE_NAME }}
        working-directory: src/${{ env.FILE_NAME }}
        run: dotnet build
  


  release:
    name: Create Release
    needs: build

    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Clear NuGet Cache
        run: dotnet nuget locals all --clear

      - name: Install dependencies for ${{ env.FILE_NAME }}
        working-directory: src/${{ env.FILE_NAME }}
        run: dotnet restore

      - name: Build
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="${{ env.FILE_NAME }}-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish src/${{ env.FILE_NAME }}/${{ env.FILE_NAME }}.csproj --framework net7.0 --runtime "${{ matrix.target }}" --self-contained false -c Release -o "$release_name"

          # Pack files

          if [ "${{ matrix.target }}" == "win-x64" ]; then
          #Pack to zip for Windows
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
          tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"
    
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "${{ env.FILE_NAME }}*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy to Azure
    needs: [release]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Clear NuGet Cache
      run: dotnet nuget locals all --clear

    - name: Install dependencies for ${{ env.FILE_NAME }}
      working-directory: src/${{ env.FILE_NAME }}
      run: dotnet restore

    - name: Build {{ env.FILE_NAME }}
      working-directory: src/${{ env.FILE_NAME }}
      run: dotnet build

#copied from release, to be edited
    - name: Publish {{ env.FILE_NAME }}
      shell: bash
      run: |
        tag=$(git describe --tags --abbrev=0)
        release_name="${{ env.FILE_NAME }}-$tag-${{ matrix.target }}"
        # Build everything
        dotnet publish src/${{ env.FILE_NAME }}/${{ env.FILE_NAME }}.csproj --framework net7.0 --runtime "${{ matrix.target }}" --self-contained false -c Release -o "$release_name"

    - name: Deploy!!
      uses: azure/webapps-deploy@v3
      with:
       app-name: ${{ env.APP_NAME }}
       publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
       package: "${{ env.FILE_PATH }}"


# Documentation / Inspiration
# 
# https://github.com/actions/setup-dotnet
# https://patriksvensson.se/posts/2020/03/creating-release-artifacts-with-github-actions
# https://github.com/patriksvensson/dotnet-release-artifacts/blob/master/.github/workflows/ci.yaml
